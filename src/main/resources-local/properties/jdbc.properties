# Properties file with JDBC-related settings.

## connectionTimeout soceketTimeout은 WAS->DBMS 네트워크장애시 어플리케이션의 무한정 대기를 방지하기 위함
## connectionTimeout : 소켓 연결을 맺기까지의 timeout milliseconds
## soceketTimeout은 : server-> client 전송 timeout milliseconds

#local

#=== DBCP 설정: Start ===

#커넥션 풀이 처음 생성될때 만들어지는 커넥션 개수
dbcp.initialSize=5
#최소한으로 유지할 커넥션 개수
dbcp.minIdle=5
#커넥션풀의 최대 커넥션 개수. maxTotal과 동일값설정이 좋으며 WAS의 maxThread 갯수보다 적은게 좋음
dbcp.maxIdle=500
#동시에 사용할 수 있는 최대 커넥션 개수(DB와 연결되는 최대 커넥션 갯수) 
dbcp.maxTotal=500
#커넥션풀에 여유분이 없을때 요청 대기시간
dbcp.maxWaitMillis=1000
#Evictor(커넥션자원정리) 스레드가 동작하는 시간격
dbcp.timeBetweenEvictionRunsMillis=300000
#Evictor 스레드 동작시 한번에 검사할 커넥션의 개수
dbcp.numTestsPerEvictionRun=2
#statement preparation 캐쉬 사용(datasource별로 미사용하는게 있으니 context-datasource.xml확인하여 필요한 곳에 적용)
dbcp.poolPreparedStatements=true
#statement preparation캐쉬할 개수(DB커넥션당 개수임). 너무크면 OOM발생하니 주의
dbcp.maxOpenPreparedStatements=100

#=== DBCP 설정: End ===

#모니터링
mntr-jdbc.driverClassName=com.mysql.jdbc.Driver
mntr-jdbc.url=jdbc:mysql://127.0.0.1:3306/mntr_dev?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&characterEncoding=utf8&amp;jdbcCompliantTruncation=false
mntr-jdbc.username=${db.id}
mntr-jdbc.password=${db.pwd}
mntr-db.connectTimeout=130000
mntr-db.socketTimeout=130000

#모니터링(Slave DB)
mntr-slave-jdbc.driverClassName=com.mysql.jdbc.Driver
mntr-slave-jdbc.url=jdbc:mysql://127.0.0.1:3306/mntr_dev?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&characterEncoding=utf8&amp;jdbcCompliantTruncation=false
mntr-slave-jdbc.username=${db.id}
mntr-slave-jdbc.password=${db.pwd}
mntr-slave-db.connectTimeout=130000
mntr-slave-db.socketTimeout=130000
